service: myrkhs
package:
  individually: true

custom:
  bucket: "${self:service}-${self:provider.stage}-profilepicture"
provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 128
  timeout: 5
  stage: ${opt:stage, 'dev'}
  environment:
    MEMBERS_TABLE: "${self:service}-${self:provider.stage}-members"
    PROFILE_BUCKET: "${self:custom.bucket}"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

functions:
  #Lambda function to fetch save delete and update the ngo members
  getmembers:
    handler: get/index.handler
    package:
      exclude:
        - uploadphoto/**
        - post/**
        - delete/**
        - update/**
      include:
        - get
    description: lambda to fetch ngos members
    events:
      - http:
          path: /get-members
          method: get
          cors: true

  savemember:
    handler: post/index.handler
    package:
      exclude:
        - uploadphoto/**
        - get/**
        - delete/**
        - update/**
      include:
        - post
    description: lambda to add ngos member
    events:
      - http:
          path: /add-member
          method: post
          cors: true

  deletemember:
    handler: delete/index.handler
    package:
      exclude:
        - uploadphoto/**
        - get/**
        - post/**
        - update/**
      include:
        - delete
    description: lambda to delete ngos member
    events:
      - http:
          path: /delete-member/{id}
          method: delete
          cors: true

  updatemember:
    handler: update/index.handler
    package:
      exclude:
        - uploadphoto/**
        - get/**
        - post/**
        - delete/**
      include:
        - update
    description: lambda to update ngos member
    events:
      - http:
          path: /update-member/{id}
          method: PUT
          cors: true
  #===========================================================

resources:
  Resources:
    MembersDBTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 4
          WriteCapacityUnits: 4
        TableName: ${self:provider.environment.MEMBERS_TABLE}

    UploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        
    UploadBucketAllowPublicReadPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: UploadBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action:
                - 's3:GetObject'
              Resource: arn:aws:s3:::${self:custom.bucket}/*
